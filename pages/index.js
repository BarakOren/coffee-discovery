import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Banner from '../components/banner/banner'
import Coffee from '../components/coffee/coffee'
import Header from '../components/header/header'
import Card from '../components/card/card'
import coffeeStores from "../data/data.json"
import { fetchCoffeeStores } from '../lib/coffee-stores'
import useTrackLocation from '../hooks/use-track-location'
import {useEffect, useState, useContext} from "react";
import { ACTION_TYPES, StoreContext} from '../store/store-context'
import Loader from "../components/loader/loader.js"

export async function getStaticProps(context){
  const coffeeStores = await fetchCoffeeStores()

  return {
    props:{
      coffeeStores
    }
  }
}
 
export default function Home(props) {
  const {dispatch, state} = useContext(StoreContext)
  const {coffeeStores, latLong} = state;
  const {handleTrackLocation, isFindingLocation, locationErrorMsg} = useTrackLocation()

  const [coffeeStoresError, setCoffeeStoresError] = useState(null)
  const [loading, setLoading] = useState(true)

  const getData = async (latLong) => {
    if(latLong){
      try{
        const res = await fetch(`/api/getCoffeeStoresByLocation?latLong=${latLong}`)
        const coffeeStores = await res.json()
        dispatch({
          type: ACTION_TYPES.SET_COFFEE_STORES,
          payload: {coffeeStores: coffeeStores}
        })
        setCoffeeStoresError('')
        setLoading(false)
      } catch (error) {
        console.log(error)
        setCoffeeStoresError(error.message)
        setLoading(false)
      }
    }
  }
  
  useEffect(() => {
    // setTimeout(() => {
      getData(latLong)
      handleTrackLocation()
    // }, 1000)
  }, [latLong])

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Explorer</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700&family=Pattaya&display=swap" rel="stylesheet" />
        </Head>
      <Banner
      handleOnClick={handleTrackLocation}
      />

      {locationErrorMsg && <p>{locationErrorMsg}</p>}
      {coffeeStoresError && <p>{coffeeStoresError}</p>}
      
      {coffeeStores.length > 0 && <h1 className={styles.nearby}>Stores Nearby</h1>}
      {loading && <div className={styles.loaderContainer}>
      <Loader />
      </div>
      }
      <div className={styles.cardsContainer}>
      {coffeeStores.map((store, index) => {
        return(
          <Card 
          key={index}
          name={store.name}
          distance={store.distance}
          href={`/coffee-store/${store.id.fsq_id}`}
          address={store.address}
          city={store.region}
          imgUrl={store.imgUrl || 'https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=8'}
          />
        )
      })}
      </div>
      {/* <footer className={styles.footer}>
      </footer> */}
    </div>
  )
}
